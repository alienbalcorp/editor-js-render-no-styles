{"version":3,"file":"editor-js-render-no-styles.cjs.development.js","sources":["../src/components/Header/Header.tsx","../src/utils/parseText.ts","../src/components/List/List.tsx","../src/components/Paragraph/Paragraph.tsx","../src/components/Image/Image.tsx","../src/components/Delimiter/Delimiter.tsx","../src/components/Code/Code.tsx","../src/components/RawTool/RawTool.tsx","../src/components/Quote/Quote.tsx","../src/components/Table/Table.tsx","../src/utils/componentKeys.ts","../src/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport Styles from './Header.module.css';\n\ntype TLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type THeaderData = {\n  level: TLevel;\n  text: string;\n};\n\nexport const Header: FC<THeaderData> = ({ level, text }) => {\n  return (() => {\n    switch (level) {\n      case 1:\n        return <h1 className={Styles.header}>{text}</h1>;\n      case 2:\n        return <h2 className={Styles.header}>{text}</h2>;\n      case 3:\n        return <h3 className={Styles.header}>{text}</h3>;\n      case 4:\n        return <h4 className={Styles.header}>{text}</h4>;\n      case 5:\n        return <h5 className={Styles.header}>{text}</h5>;\n      case 6:\n        return <h6 className={Styles.header}>{text}</h6>;\n      default:\n        return <h1 className={Styles.header}>{text}</h1>;\n    }\n  })();\n};\n","import parse from 'html-react-parser';\n\nexport const parseText = (text: string) => parse(text);\n","import React, { FC, useMemo } from 'react';\nimport Styles from './List.module.css';\nimport { parseText } from '../../utils/parseText';\n\nconst ORDERED_KEY = 'ordered';\nconst UNORDERED_KEY = 'unordered';\n\nexport type TListData = {\n  items: string[];\n  style?: typeof ORDERED_KEY | typeof UNORDERED_KEY;\n};\n\nexport const List: FC<TListData> = ({ items, style = UNORDERED_KEY }) => {\n  const orderedList = useMemo(() => style === UNORDERED_KEY, []);\n\n  return orderedList ? (\n    <ul className={Styles.list}>\n      {items.map((text, index) => (\n        <li className={Styles.listItem} key={index}>\n          {parseText(text)}\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <ol className={Styles.list}>\n      {items.map((text, index) => (\n        <li className={Styles.listItem} key={index}>\n          {parseText(text)}\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import React, { FC } from 'react';\nimport Styles from './Paragraph.module.css';\nimport { parseText } from '../../utils/parseText';\n\nexport type TParagraphData = {\n  text: string;\n};\n\nexport const Paragraph: FC<TParagraphData> = ({ text }) => (\n  <p className={Styles.paragraph}>{parseText(text)}</p>\n);\n","import React, { FC } from 'react';\nimport Styles from './Image.module.css';\n\nexport type TImageData = {\n  file: {\n    url: string;\n  };\n  caption?: string;\n  withBorder?: boolean;\n  stretched?: boolean;\n  withBackground?: boolean;\n};\n\nexport const Image: FC<TImageData> = ({\n  file,\n  caption,\n  withBorder = false,\n  withBackground = false,\n  stretched = false,\n}) => {\n  return (\n    <figure className={stretched ? Styles.stretched : Styles.figure}>\n      {withBackground ? (\n        <div\n          className={!withBorder ? Styles.background : Styles.backgroundBorder}\n        >\n          <img\n            src={file.url}\n            className={!withBorder ? Styles.image : Styles.imageBorder}\n            alt={caption}\n          />\n        </div>\n      ) : (\n        <img\n          src={file.url}\n          className={!withBorder ? Styles.image : Styles.imageBorder}\n          alt={caption}\n        />\n      )}\n      {caption && <figcaption className={Styles.caption}>{caption}</figcaption>}\n    </figure>\n  );\n};\n","import React, { FC } from 'react';\nimport Styles from './Delimiter.module.css';\n\nexport type TDelimiterData = {};\n\nexport const Delimiter: FC<TDelimiterData> = () => (\n  <div className={Styles.delimiter} />\n);\n","import React, { FC } from 'react';\nimport Styles from './Code.module.css';\n\nexport type TCodeData = {\n  code: string;\n};\n\nexport const Code: FC<TCodeData> = ({ code }) => {\n  return (\n    <pre>\n      <code className={Styles.code}>{code}</code>\n    </pre>\n  );\n};\n","import React, { FC } from 'react';\nimport Styles from './RawTool.module.css';\n\nexport type TRawToolData = {\n  html: string;\n};\n\nexport const RawTool: FC<TRawToolData> = ({ html }) => {\n  return (\n    <pre>\n      <code className={Styles.rawTool}>{html}</code>\n    </pre>\n  );\n};\n","import React, { FC, useMemo } from 'react';\nimport { parseText } from '../../utils/parseText';\nimport Styles from './Quote.module.css';\n\nexport type TQuoteData = {\n  text: string;\n  caption: string;\n  alignment: 'left' | 'center';\n};\n\nexport const Quote: FC<TQuoteData> = ({ text, caption, alignment }) => {\n  const isTextCentered = useMemo(() => alignment === 'center', []);\n\n  return (\n    <figure className={Styles.figure}>\n      <blockquote\n        className={isTextCentered ? Styles.centeredQuote : Styles.blockquote}\n      >\n        <p className={Styles.paragraph}>{parseText(text)}</p>\n      </blockquote>\n      <figcaption>â€” {parseText(caption)}</figcaption>\n    </figure>\n  );\n};\n","import parse from 'html-react-parser';\nimport React, { FC } from 'react';\nimport Styles from './Table.module.css';\n\nexport type TTableData = {\n  content: string[][];\n  withHeadings: boolean;\n};\n\nexport const Table: FC<TTableData> = ({ withHeadings, content }) => {\n  const _content = content.slice();\n  const heading = withHeadings ? _content.splice(0, 1) : [];\n\n  return (\n    <div className={Styles.wrapper}>\n      <table className={Styles.table}>\n        {withHeadings && (\n          <thead className={Styles.tr}>\n            <tr>\n              {heading[0]?.map((text, index) => (\n                <th\n                  key={`${text}-${index}`}\n                  className={\n                    index === 0 || index === heading[0].length - 1\n                      ? Styles.tdBorderless\n                      : Styles.td\n                  }\n                >\n                  {parse(text)}\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody>\n          {_content.map((row, index) => (\n            <tr key={`row-${index}`} className={Styles.tr}>\n              {row.map((text, index) => (\n                <td\n                  key={`${text}-${index}`}\n                  className={\n                    index === 0 || index === row.length - 1\n                      ? Styles.tdBorderless\n                      : Styles.td\n                  }\n                >\n                  {parse(text)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export const HEADER_KEY = 'header';\nexport const PARAGRAPH_KEY = 'paragraph';\nexport const LIST_KEY = 'list';\nexport const DELIMITER_KEY = 'delimiter';\nexport const IMAGE_KEY = 'image';\nexport const CODE_KEY = 'code';\nexport const RAW_TOOL_KEY = 'rawTool';\nexport const QUOTE_KEY = 'quote';\nexport const TABLE_KEY = 'table';\n\nexport const DATA_KEY = 'data';\nexport const ERROR_KEY = 'error';\n","import React, { FC } from 'react';\nimport { Header } from './components/Header';\nimport { List } from './components/List';\nimport { Paragraph } from './components/Paragraph';\nimport { Image } from './components/Image';\nimport { Delimiter } from './components/Delimiter';\nimport { Code } from './components/Code';\nimport { RawTool } from './components/RawTool';\nimport { Quote } from './components/Quote';\nimport { Table } from './components/Table';\n\nimport './generalStyles.css';\n\nimport { IParser } from './types/ParserData';\n\nimport {\n  CODE_KEY,\n  DATA_KEY,\n  DELIMITER_KEY,\n  ERROR_KEY,\n  HEADER_KEY,\n  IMAGE_KEY,\n  LIST_KEY,\n  PARAGRAPH_KEY,\n  QUOTE_KEY,\n  RAW_TOOL_KEY,\n  TABLE_KEY,\n} from './utils/componentKeys';\n\nconst Parser: FC<Record<typeof DATA_KEY, IParser>> = ({ data }) => {\n  return (\n    <>\n      {data?.blocks?.map(item => {\n        const { type, data, id } = item;\n\n        switch (type) {\n          case HEADER_KEY:\n            return <Header key={id} level={data.level} text={data.text} />;\n          case PARAGRAPH_KEY:\n            return <Paragraph key={id} text={data.text} />;\n          case LIST_KEY:\n            return <List key={id} items={data.items} style={data.style} />;\n          case DELIMITER_KEY:\n            return <Delimiter key={id} />;\n          case IMAGE_KEY:\n            return (\n              <Image\n                key={id}\n                file={data.file}\n                caption={data.caption}\n                withBorder={data.withBorder}\n                withBackground={data.withBackground}\n                stretched={data.stretched}\n              />\n            );\n          case CODE_KEY:\n            return <Code key={id} code={data.code} />;\n          case RAW_TOOL_KEY:\n            return <RawTool key={id} html={data.html} />;\n          case QUOTE_KEY:\n            return (\n              <Quote\n                key={id}\n                text={data.text}\n                caption={data.caption}\n                alignment={data.alignment}\n              />\n            );\n          case TABLE_KEY:\n            return (\n              <Table\n                key={id}\n                content={data.content}\n                withHeadings={data.withHeadings}\n              />\n            );\n          default:\n            return <div key={ERROR_KEY}>Error!</div>;\n        }\n      })}\n    </>\n  );\n};\n\nexport {\n  Parser,\n  Header,\n  List,\n  Paragraph,\n  Image,\n  Delimiter,\n  Code,\n  RawTool,\n  Quote,\n  Table,\n};\n"],"names":["Header","level","text","React","className","Styles","header","parseText","parse","UNORDERED_KEY","List","items","style","orderedList","useMemo","list","map","index","listItem","key","Paragraph","paragraph","Image","file","caption","withBorder","withBackground","stretched","figure","background","backgroundBorder","src","url","image","imageBorder","alt","Delimiter","delimiter","Code","code","RawTool","html","rawTool","Quote","alignment","isTextCentered","centeredQuote","blockquote","Table","withHeadings","content","_content","slice","heading","splice","wrapper","table","tr","length","tdBorderless","td","row","HEADER_KEY","PARAGRAPH_KEY","LIST_KEY","DELIMITER_KEY","IMAGE_KEY","CODE_KEY","RAW_TOOL_KEY","QUOTE_KEY","TABLE_KEY","ERROR_KEY","Parser","data","blocks","item","type","id"],"mappings":"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"}